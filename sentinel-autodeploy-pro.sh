chmod +x sentinel-autodeploy-pro.sh
./sentinel-autodeploy-pro.sh#!/bin/bash
# ==========================================================
# üöÄ Sentinel AutoDeploy PRO+  ‚Äî Audit, Build & Self-Heal
# ==========================================================
# Auteur : IA Supervisor
# Projet : Sentinel Quantum Vanguard AI Pro (Fusion)
# ==========================================================

GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'
LOG_DIR=~/SentinelQuantumVanguardAiPro/logs
REPORT_DIR=~/SentinelQuantumVanguardAiPro/audits
SITE_URL="https://sentinel-fusion.pages.dev"

mkdir -p "$LOG_DIR"
mkdir -p "$REPORT_DIR"

LOG_FILE="$LOG_DIR/sentinel-latest.log"
REPORT_FILE="$REPORT_DIR/sentinel-report-$(date '+%Y%m%d-%H%M%S').html"

echo -e "${GREEN}üöÄ Lancement Sentinel AutoDeploy PRO+...${NC}" | tee -a "$LOG_FILE"

cd ~/SentinelQuantumVanguardAiPro || exit

# === 1Ô∏è‚É£ Synchronisation Git ===
echo -e "${GREEN}üîÅ Synchronisation GitHub...${NC}" | tee -a "$LOG_FILE"
git pull origin main --rebase >>"$LOG_FILE" 2>&1
git add .
git commit -m "ü§ñ AutoDeploy PRO+ $(date '+%Y-%m-%d %H:%M:%S')" >>"$LOG_FILE" 2>&1 || echo "Aucun changement."
git push origin main >>"$LOG_FILE" 2>&1 && echo -e "${GREEN}‚úÖ Push GitHub r√©ussi.${NC}" | tee -a "$LOG_FILE"

# === 2Ô∏è‚É£ D√©clenchement Cloudflare ===
echo -e "${GREEN}üåê V√©rification du site en ligne...${NC}" | tee -a "$LOG_FILE"
if curl -Is "$SITE_URL" | grep -q "200 OK"; then
  echo -e "${GREEN}‚úÖ Site en ligne.${NC}" | tee -a "$LOG_FILE"
else
  echo -e "${RED}‚ö†Ô∏è Site non accessible, tentative de red√©ploiement...${NC}" | tee -a "$LOG_FILE"
  echo "trigger redeploy" >> trigger.txt
  git add trigger.txt
  git commit -m "üö® AutoRedeploy - Site injoignable"
  git push origin main
  termux-toast -b yellow "‚ö†Ô∏è AutoRedeploy : Site injoignable"
fi

# === 3Ô∏è‚É£ Audit Lighthouse (n√©cessite Node.js + npm) ===
echo -e "${YELLOW}üß† Audit Lighthouse en cours...${NC}" | tee -a "$LOG_FILE"
if command -v npx >/dev/null 2>&1; then
  npx --yes lighthouse "$SITE_URL" \
    --quiet \
    --chrome-flags="--headless" \
    --output html \
    --output-path "$REPORT_FILE" >>"$LOG_FILE" 2>&1

  if [ -f "$REPORT_FILE" ]; then
    echo -e "${GREEN}üìä Rapport d‚Äôaudit g√©n√©r√© : ${REPORT_FILE}${NC}" | tee -a "$LOG_FILE"
    termux-notification --title "Sentinel Fusion" --content "üìä Rapport Lighthouse g√©n√©r√© avec succ√®s." --priority high
  else
    echo -e "${RED}‚ùå √âchec de g√©n√©ration du rapport Lighthouse.${NC}" | tee -a "$LOG_FILE"
  fi
else
  echo -e "${RED}‚ö†Ô∏è npx non trouv√©. Installe Node.js avant d‚Äôex√©cuter l‚Äôaudit.${NC}" | tee -a "$LOG_FILE"
fi

# === 4Ô∏è‚É£ V√©rifications secondaires ===
echo -e "${GREEN}üîç V√©rifications SSL / PWA...${NC}" | tee -a "$LOG_FILE"

if curl -Is "$SITE_URL" | grep -q "Strict-Transport-Security"; then
  echo -e "${GREEN}üîí SSL actif.${NC}" | tee -a "$LOG_FILE"
else
  echo -e "${YELLOW}‚ö†Ô∏è SSL non d√©tect√©.${NC}" | tee -a "$LOG_FILE"
fi

if curl -s "$SITE_URL/manifest.webmanifest" | grep -q "name"; then
  echo -e "${GREEN}üì± PWA manifest valide.${NC}" | tee -a "$LOG_FILE"
else
  echo -e "${YELLOW}‚ö†Ô∏è Manifest PWA manquant.${NC}" | tee -a "$LOG_FILE"
fi

# === 5Ô∏è‚É£ Notifications finales ===
if grep -q "200 OK" <<<"$(curl -Is "$SITE_URL")"; then
  termux-toast -b green "‚úÖ Sentinel Fusion d√©ploy√© + audit√© avec succ√®s"
  termux-notification --title "Sentinel AutoDeploy PRO+" --content "‚úÖ D√©ploiement et audit r√©ussis." --priority high
else
  termux-toast -b red "‚ùå √âchec du d√©ploiement Sentinel Fusion"
  termux-notification --title "Sentinel AutoDeploy PRO+" --content "‚ùå Erreur durant le d√©ploiement." --priority high
fi

echo -e "${GREEN}üéØ Ex√©cution termin√©e ‚Äî voir les logs dans ${LOG_FILE}${NC}"
