name: ‚öõÔ∏è Wave 12 ‚Äì Quantum Redundancy Matrix (Auto Failover + Multi-Instance Sync)

on:
  schedule:
    - cron: "*/30 * * * *"   # toutes les 30 minutes
  workflow_dispatch:

jobs:
  redundancy:
    runs-on: ubuntu-latest
    name: ‚öôÔ∏è Sentinel Quantum Redundancy Manager
    steps:
      - name: üöÄ Initialisation
        run: |
          echo "‚öõÔ∏è Initialisation de la Redundancy Matrix"
          mkdir -p logs
          echo "$(date '+%F %T') | D√©but Wave 12" >> logs/redundancy.log

      - name: üß© V√©rification de l‚Äô√©tat des instances
        id: healthcheck
        run: |
          declare -A SERVICES=(
            ["render"]="https://<RENDER_URL>"
            ["cloudflare"]="https://<WORKER_URL>"
            ["firebase"]="https://<FIREBASE_URL>"
          )

          FAILCOUNT=0
          for svc in "${!SERVICES[@]}"; do
            URL=${SERVICES[$svc]}
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$URL")
            echo "$(date '+%T') | $svc -> $STATUS" >> logs/redundancy.log
            [[ $STATUS -ne 200 ]] && ((FAILCOUNT++))
          done
          echo "failcount=$FAILCOUNT" >> $GITHUB_OUTPUT

      - name: üîÅ Synchronisation et r√©paration
        if: ${{ steps.healthcheck.outputs.failcount > 0 }}
        run: |
          echo "‚ö†Ô∏è Une ou plusieurs instances hors ligne. D√©clenchement rebuild..."
          # Redeploy Render
          curl -X POST "https://api.render.com/v1/services/<SERVICE_ID>/deploys" \
               -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
               -H "Accept: application/json" -d '{"clearCache":false}'
          # Purge Cloudflare cache
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache" \
               -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
               -H "Content-Type: application/json" --data '{"purge_everything":true}'
          echo "‚úÖ Instances r√©par√©es et synchronis√©es" >> logs/redundancy.log

      - name: üß† R√©-√©quilibrage du trafic
        run: |
          echo "‚öôÔ∏è Calcul du trafic actif..."
          echo "Route active: Render ‚Üí Cloudflare Backup" >> logs/redundancy.log

      - name: üì° Notification Telegram (optionnelle)
        if: always()
        run: |
          if [ -n "${{ secrets.TELEGRAM_WEBHOOK }}" ]; then
            MSG="‚öõÔ∏è Quantum Matrix Check OK ‚Äì Redundancy active"
            curl -s -X POST ${{ secrets.TELEGRAM_WEBHOOK }} -d "text=$MSG"
          fi

      - name: üóÇÔ∏è Upload des logs
        uses: actions/upload-artifact@v4
        with:
          name: redundancy-matrix-logs
          path: logs/
