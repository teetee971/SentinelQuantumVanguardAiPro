name: üõ°Ô∏è Wave 13 ‚Äì Sentinel AI Firewall Reinforcement

on:
  schedule:
    - cron: "*/15 * * * *"   # toutes les 15 minutes
  workflow_dispatch:

jobs:
  firewall:
    runs-on: ubuntu-latest
    name: üß† Sentinel WAF Auto-Reinforcement
    steps:
      - name: üöÄ Initialisation
        run: |
          echo "üõ°Ô∏è Initialisation du module Firewall AI"
          mkdir -p logs
          echo "$(date '+%F %T') | Lancement Wave 13" >> logs/firewall.log

      - name: üì° Collecte des logs Cloudflare & Render
        run: |
          echo "T√©l√©chargement des derniers √©v√®nements Cloudflare + Render"
          curl -s -X GET "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/logs/received?start=-15m" \
               -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" > logs/cf_events.json
          curl -s -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
               https://api.render.com/v1/services/<SERVICE_ID>/events > logs/render_firewall.json

      - name: üîç Analyse IA des menaces
        id: analyze
        run: |
          echo "Analyse des patterns d'attaque..."
          BLOCK_403=$(grep -c '"status":403' logs/cf_events.json || echo 0)
          BLOCK_429=$(grep -c '"status":429' logs/cf_events.json || echo 0)
          BLOCK_404=$(grep -c '"status":404' logs/cf_events.json || echo 0)
          TOTAL=$((BLOCK_403 + BLOCK_429 + BLOCK_404))
          echo "total=$TOTAL" >> $GITHUB_OUTPUT
          echo "$(date '+%T') | 403:$BLOCK_403 429:$BLOCK_429 404:$BLOCK_404" >> logs/firewall.log

      - name: üö® Renforcement WAF automatique
        if: ${{ steps.analyze.outputs.total > 10 }}
        run: |
          echo "‚ö†Ô∏è Activit√© suspecte d√©tect√©e (${{ steps.analyze.outputs.total }} attaques)."
          echo "Activation des r√®gles Cloudflare..."
          curl -s -X PATCH "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/firewall/rules" \
               -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
               -H "Content-Type: application/json" \
               --data '{"paused":false}'
          echo "Purge du cache et blocage temporaire IP"
          echo "$(date '+%T') | WAF renforc√© + purge cache" >> logs/firewall.log

      - name: üßò Restauration automatique
        if: ${{ steps.analyze.outputs.total <= 10 }}
        run: |
          echo "Restauration des param√®tres WAF par d√©faut."
          echo "$(date '+%T') | Mode normal restaur√©" >> logs/firewall.log

      - name: üì≤ Notification Telegram (optionnelle)
        if: always()
        run: |
          if [ -n "${{ secrets.TELEGRAM_WEBHOOK }}" ]; then
            MSG="üõ°Ô∏è Sentinel Firewall Scan termin√© ‚Äì Attaques:${{ steps.analyze.outputs.total }}"
            curl -s -X POST ${{ secrets.TELEGRAM_WEBHOOK }} -d "text=$MSG"
          fi

      - name: üóÇÔ∏è Upload des logs
        uses: actions/upload-artifact@v4
        with:
          name: sentinel-firewall-logs
          path: logs/
