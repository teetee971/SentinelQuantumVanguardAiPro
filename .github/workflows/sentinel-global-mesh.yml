name: 🛰️ Wave 29 – Sentinel Global Cognitive Mesh (Inter-Instance Sync)

on:
  schedule:
    - cron: "*/60 * * * *"    # chaque heure
  workflow_dispatch:

jobs:
  mesh:
    runs-on: ubuntu-latest
    name: 🌐 Global Cognitive Mesh Core
    steps:
      - name: 🚀 Initialisation
        run: |
          echo "🌐 Lancement Global Mesh"
          mkdir -p logs mesh
          echo "$(date '+%F %T') | Début Wave 29" >> logs/mesh.log

      - name: 📡 Récupération des rapports régionaux
        env:
          EU_URL: "https://sentinelquantumvanguardaipro.pages.dev/telemetry/quantum_sentience_report.json"
          US_URL: "https://sentinel-us.pages.dev/telemetry/quantum_sentience_report.json"
          ASIA_URL: "https://sentinel-asia.pages.dev/telemetry/quantum_sentience_report.json"
        run: |
          curl -s $EU_URL -o mesh/eu.json || echo '{}' > mesh/eu.json
          curl -s $US_URL -o mesh/us.json || echo '{}' > mesh/us.json
          curl -s $ASIA_URL -o mesh/asia.json || echo '{}' > mesh/asia.json

      - name: 🧬 Fusion des états
        run: |
          jq -n --slurpfile eu mesh/eu.json --slurpfile us mesh/us.json --slurpfile asia mesh/asia.json '
          {
            timestamp: now,
            regions: {
              europe: $eu[0],
              usa: $us[0],
              asia: $asia[0]
            },
            mesh_score: (
              ([$eu[0].meta.avg_score, $us[0].meta.avg_score, $asia[0].meta.avg_score] | add)
              / 3
            ),
            unstable_ratio: (
              ([ $eu[0].meta.stable_nodes, $us[0].meta.stable_nodes, $asia[0].meta.stable_nodes ]
               | map(1 - (. / (. + 0.001))) | add) / 3 * 100
            ),
            global_state: (if .unstable_ratio > 60 then "⚠️ Instable" else "✅ Nominal" end)
          }' > public/telemetry/global_mesh_state.json
          echo "✅ Fusion effectuée" >> logs/mesh.log

      - name: 🧾 Génération du résumé Markdown
        run: |
          jq -r '
            "# Sentinel Global Cognitive Mesh\n\n" +
            "Horodatage : " + (.timestamp|tostring) + "\n" +
            "État global : " + .global_state + "\n\n" +
            "Score moyen du réseau : " + (.mesh_score|tostring) + "\n" +
            "Taux d’instabilité : " + (.unstable_ratio|tostring) + "%\n\n" +
            "Régions intégrées : Europe, USA, Asie\n"
          ' public/telemetry/global_mesh_state.json > public/telemetry/global_mesh.md
          echo "✅ Résumé Markdown généré" >> logs/mesh.log

      - name: 💾 Commit
        run: |
          git config --global user.name "Sentinel-Mesh-Core"
          git config --global user.email "mesh@sentinel"
          git add public/telemetry/global_mesh_state.json public/telemetry/global_mesh.md
          git commit -m "🛰️ Update Global Cognitive Mesh State $(date +%T)" || echo "Aucune modification"
          git push || echo "Push non nécessaire"

      - name: 📲 Notification Telegram
        if: always()
        run: |
          if [ -n "${{ secrets.TELEGRAM_WEBHOOK }}" ]; then
            STATE=$(jq -r '.global_state' public/telemetry/global_mesh_state.json)
            MSG="🛰️ [Sentinel Global Mesh] État : $STATE"
            curl -s -X POST ${{ secrets.TELEGRAM_WEBHOOK }} -d "text=$MSG"
          fi

      - name: 🗂️ Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: sentinel-global-mesh-logs
          path: logs/
