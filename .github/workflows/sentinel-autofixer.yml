name: ü§ñ Sentinel AutoFixer + HealthAgent + Telegram

on:
  schedule:
    - cron: "*/30 * * * *"   # toutes les 30 minutes
  workflow_dispatch:

jobs:
  sentinel-autofix:
    runs-on: ubuntu-latest

    steps:
      - name: üîÑ Checkout du d√©p√¥t
        uses: actions/checkout@v4

      - name: üß© V√©rifie et recr√©e les dossiers essentiels
        run: |
          mkdir -p public/dashboard public/documentation
          touch public/dashboard/.keep
          touch public/documentation/.keep
          echo "‚úÖ V√©rification des r√©pertoires termin√©e."

      - name: üíæ Commit automatique si changement d√©tect√©
        run: |
          git config --global user.name "Sentinel AutoFixer"
          git config --global user.email "autofix@sentinel.local"
          git add public/dashboard/.keep public/documentation/.keep || true
          git diff --cached --quiet || git commit -m "üß† AutoFixer : dossiers recr√©√©s automatiquement"
          git push || echo "‚ÑπÔ∏è Aucun changement √† pousser"

      - name: ‚òÅÔ∏è D√©ploiement Cloudflare Pages
        id: deploy
        uses: cloudflare/pages-action@v1
        with:
          apiToken: \${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: \${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: "sentinelquantumvanguardaipro"
          directory: "dist"

      - name: ü©∫ V√©rification HealthAgent (accessibilit√© URLs)
        id: health
        run: |
          URLS=(
            "https://sentinelquantumvanguardaipro.pages.dev"
            "https://sentinelquantumvanguardaipro.pages.dev/dashboard/perf.html"
            "https://sentinelquantumvanguardaipro.pages.dev/documentation/index.html"
            "https://sentinelquantumvanguardaipro.pages.dev/status.html"
          )
          echo "üîç V√©rification de l'accessibilit√© des pages..."
          STATUS_REPORT=""
          for URL in "\${URLS[@]}"; do
            HTTP_CODE=$(curl -o /dev/null -s -w "%{http_code}" "\$URL")
            if [ "\$HTTP_CODE" = "200" ]; then
              STATUS_REPORT+="‚úÖ OK : \$URL\n"
            else
              STATUS_REPORT+="‚ö†Ô∏è ERREUR (\$HTTP_CODE) : \$URL\n"
            fi
          done
          echo -e "\$STATUS_REPORT" > health_report.txt
          echo "ü©∫ Rapport d'√©tat g√©n√©r√©."

      - name: üì≤ Notification Telegram
        if: always()
        run: |
          STATUS="‚úÖ D√©ploiement r√©ussi"
          if [ "\${{ job.status }}" != "success" ]; then STATUS="‚ö†Ô∏è Erreur d√©tect√©e"; fi

          MSG="üõ∞ *Sentinel AutoFixer*\n\n\${STATUS}\n\n*D√©tails HealthAgent :*\n$(cat health_report.txt)\n\nüåç [Acc√©der au site](https://sentinelquantumvanguardaipro.pages.dev)"

          if [ -n "\${{ secrets.TELEGRAM_BOT_TOKEN }}" ] && [ -n "\${{ secrets.TELEGRAM_CHAT_ID }}" ]; then
            curl -s -X POST "https://api.telegram.org/bot\${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
              -d chat_id="\${{ secrets.TELEGRAM_CHAT_ID }}" \
              -d parse_mode="Markdown" \
              -d text="\$MSG"
          else
            echo "‚öôÔ∏è Telegram d√©sactiv√© (secrets manquants)"
          fi
