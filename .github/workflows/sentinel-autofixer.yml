name: üß† Sentinel AutoFixer v5.0 ‚Äî HealthAgent + CDNHeal + Telegram + Console IA

on:
  schedule:
    - cron: "*/30 * * * *"
  workflow_dispatch:

jobs:
  sentinel-autofix:
    runs-on: ubuntu-latest

    steps:
      - name: üîÑ Checkout du d√©p√¥t
        uses: actions/checkout@v4

      - name: üß© V√©rifie et recr√©e les dossiers essentiels
        run: |
          mkdir -p public/dashboard public/documentation public/admin/agents
          touch public/dashboard/.keep public/documentation/.keep
          echo "‚úÖ V√©rification termin√©e."

      - name: üíæ Commit automatique si changement
        run: |
          git config --global user.name "Sentinel AutoFixer"
          git config --global user.email "autofix@sentinel.local"
          git add public/dashboard/.keep public/documentation/.keep || true
          git diff --cached --quiet || git commit -m "üß† AutoFixer : Dossiers recr√©√©s automatiquement"
          git push || echo "‚ÑπÔ∏è Aucun changement d√©tect√©"

      - name: ‚òÅÔ∏è D√©ploiement Cloudflare Pages
        id: deploy
        uses: cloudflare/pages-action@v1
        with:
          apiToken: \${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: \${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: "sentinelquantumvanguardaipro"
          directory: "dist"

      - name: ü©∫ HealthAgent ‚Äî V√©rification des URLs cl√©s
        id: health
        run: |
          URLS=(
            "https://sentinelquantumvanguardaipro.pages.dev"
            "https://sentinelquantumvanguardaipro.pages.dev/dashboard/"
            "https://sentinelquantumvanguardaipro.pages.dev/documentation/"
            "https://sentinelquantumvanguardaipro.pages.dev/status/"
          )
          echo "üîç V√©rification des pages principales..."
          STATUS_REPORT=""
          ERRORS=0
          for URL in "\${URLS[@]}"; do
            HTTP_CODE=$(curl -o /dev/null -s -w "%{http_code}" "\$URL")
            if [ "\$HTTP_CODE" = "200" ]; then
              STATUS_REPORT+="‚úÖ OK (\$HTTP_CODE) ‚Äî \$URL\n"
            else
              STATUS_REPORT+="‚ö†Ô∏è ERREUR (\$HTTP_CODE) ‚Äî \$URL\n"
              ERRORS=$((ERRORS+1))
            fi
          done
          echo -e "\$STATUS_REPORT" > health_report.txt
          echo "ERREURS=\$ERRORS" >> \$GITHUB_ENV
          cat health_report.txt

      - name: üßπ CDNHeal ‚Äî Purge Cloudflare si erreur
        if: env.ERREURS != 0
        run: |
          echo "üö® Erreur d√©tect√©e ‚Äî purge du cache Cloudflare..."
          curl -X POST "https://api.cloudflare.com/client/v4/zones/\${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache" \
            -H "Authorization: Bearer \${{ secrets.CLOUDFLARE_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            --data '{"purge_everything":true}'
          echo "üßº Cache Cloudflare purg√© avec succ√®s."

      - name: üß† G√©n√©ration console IA /admin/agents
        run: |
          mkdir -p public/admin/agents
          DATE=$(date '+%Y-%m-%d %H:%M:%S UTC')
          cat > public/admin/agents/index.html <<HTML
          <!DOCTYPE html>
          <html lang="fr">
          <head>
            <meta charset="utf-8">
            <meta name="viewport" content="width=device-width,initial-scale=1">
            <title>Sentinel IA Console ‚Äî Agents Monitor</title>
            <style>
              body {background:#000;color:#0ff;font-family:monospace;margin:0;padding:20px;}
              h1{color:#00ffff;text-shadow:0 0 10px #0ff;}
              .log{background:#0a0a0a;border:1px solid #033;padding:15px;margin-top:10px;border-radius:8px;}
              .ok{color:#00ff9d;} .warn{color:#ffb347;} .err{color:#ff6b6b;}
              footer{margin-top:30px;font-size:12px;color:#0cc;}
            </style>
          </head>
          <body>
            <h1>üõ∞Ô∏è Sentinel AI Agents ‚Äî Console Live</h1>
            <div class="log">
              <pre>$(cat health_report.txt)</pre>
            </div>
            <footer>Derni√®re mise √† jour : \$DATE</footer>
          </body>
          </html>
          HTML

      - name: üì≤ Notification Telegram
        if: always()
        run: |
          STATUS="‚úÖ D√©ploiement r√©ussi"
          if [ "\${{ job.status }}" != "success" ]; then STATUS="‚ö†Ô∏è Erreur d√©tect√©e"; fi

          MSG="ü§ñ *Sentinel AutoFixer v5.0*\n\n\${STATUS}\n\nü©∫ *Rapport HealthAgent :*\n$(cat health_report.txt)\n\nüåç [Acc√©der au site](https://sentinelquantumvanguardaipro.pages.dev)\n\nüß† [Console IA Agents] (https://sentinelquantumvanguardaipro.pages.dev/admin/agents/)"

          if [ -n "\${{ secrets.TELEGRAM_BOT_TOKEN }}" ] && [ -n "\${{ secrets.TELEGRAM_CHAT_ID }}" ]; then
            curl -s -X POST "https://api.telegram.org/bot\${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
              -d chat_id="\${{ secrets.TELEGRAM_CHAT_ID }}" \
              -d parse_mode="Markdown" \
              -d text="\$MSG"
          else
            echo "‚öôÔ∏è Telegram d√©sactiv√© (secrets manquants)"
          fi
