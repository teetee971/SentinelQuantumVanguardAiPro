name: üöÄ Sentinel Quantum Vanguard AI Pro ‚Äî AutoDeploy Cloud Edition

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_release:
    name: "üß© Build & Package ZIP"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: üèóÔ∏è Build & Prepare release
        run: |
          mkdir -p release-pack
          cp -r .github firebase.json .firebaserc README_AutoDeploy.txt release-pack/ || true
          cd release-pack
          zip -r ../SentinelQuantumVanguardAiPro_AutoDeploy_CloudEdition.zip .

      - name: üöÄ Publish ZIP to GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          tag_name: autodeploy-${{ github.run_number }}
          name: "AutoDeploy Cloud Edition Build ${{ github.run_number }}"
          files: SentinelQuantumVanguardAiPro_AutoDeploy_CloudEdition.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update_dashboard:
    name: "üìä Update IA Dashboard"
    runs-on: ubuntu-latest
    needs: [build_release]
    steps:
      - uses: actions/checkout@v4
      - name: üß† Update IA dashboard timestamps
        run: |
          TODAY=$(date +"%d/%m/%Y %H:%M")
          sed -i "s|\$(date .*)|$TODAY|g" README.md || true
          echo "‚úÖ Tableau IA mis √† jour automatiquement √† $TODAY"
      - name: üõ∞Ô∏è Commit & push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "Sentinel AutoDeploy Bot"
          git config user.email "sentinel-bot@users.noreply.github.com"
          git add README.md
          git commit -m "ü§ñ Auto-update IA dashboard $TODAY" || echo "No changes"
          git push

  tag_release:
    name: "üè∑Ô∏è Tag & Version Release"
    runs-on: ubuntu-latest
    needs: [update_dashboard]
    steps:
      - uses: actions/checkout@v4
      - name: üè∑Ô∏è Tag Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="v$(date +'%Y.%m.%d.%H%M')"
          git config user.name "Sentinel Release Bot"
          git config user.email "release-bot@users.noreply.github.com"
          git tag -a "$TAG" -m "AutoDeploy Build $TAG"
          git push origin "$TAG"
          echo "‚úÖ Version tagu√©e : $TAG"

  cloudflare_failover:
    name: "‚òÅÔ∏è Cloudflare Failover AI"
    runs-on: ubuntu-latest
    needs: [tag_release]
    steps:
      - name: üß† V√©rification du statut Firebase Hosting
        run: |
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" https://sentinel-fusion.web.app)
          if [ "$RESPONSE" -ne 200 ]; then
            echo "üö® Firebase Hosting indisponible ‚Äî activation du Failover Cloudflare..."
            echo "FAILOVER=1" >> $GITHUB_ENV
          else
            echo "‚úÖ Firebase Hosting est op√©rationnel."
          fi

      - name: ‚òÅÔ∏è D√©clenchement du d√©ploiement Cloudflare Pages
        if: env.FAILOVER == '1'
        run: |
          echo "üîÅ D√©clenchement Cloudflare Failover"
          curl -X POST "https://api.cloudflare.com/client/v4/accounts/${{ secrets.CF_ACCOUNT_ID }}/pages/projects/sentinel-fusion/deployments" \
            -H "Authorization: Bearer ${{ secrets.CF_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"deployment_trigger": {"metadata": {"reason": "Failover Firebase ‚Üí Cloudflare"}, "type": "manual"}}'
          echo "‚úÖ Bascule Cloudflare r√©ussie."