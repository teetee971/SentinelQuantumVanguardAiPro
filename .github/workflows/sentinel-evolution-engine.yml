name: 🔁 Wave 31 – Sentinel Evolution Engine (Auto-Upgrade Core)

on:
  schedule:
    - cron: "0 */6 * * *"     # toutes les 6 h
  workflow_dispatch:

jobs:
  evolution:
    runs-on: ubuntu-latest
    name: 🔁 Sentinel Evolution Engine
    steps:
      - name: 🚀 Initialisation
        run: |
          echo "🔁 Lancement du moteur Evolution"
          mkdir -p logs evolution
          echo "$(date '+%F %T') | Début Wave 31" >> logs/evolution.log

      - name: 📡 Lecture des états collectifs
        run: |
          cp public/telemetry/collective_intelligence.json evolution/collective.json 2>/dev/null || echo '{}' > evolution/collective.json
          cp public/telemetry/adaptive_model.json evolution/adaptive.json 2>/dev/null || echo '{}' > evolution/adaptive.json

      - name: 🧮 Détection des modules obsolètes
        run: |
          echo "Vérification des dépendances..."
          jq -n --slurpfile c evolution/collective.json --slurpfile a evolution/adaptive.json '
          {
            timestamp: now,
            avg_score: ([.a[0].nodes[]?.score] | add / (length + 0.1)),
            upgrade_required: (if [.c[0].sentinel_collective_index] | add < 70 then true else false end),
            suggestions: [
              "Mettre à jour React / Tailwind",
              "Revalider workflows GitHub Actions",
              "Synchroniser secrets Cloudflare / Render"
            ]
          }' > public/telemetry/evolution_report.json
          echo "✅ Rapport Evolution généré" >> logs/evolution.log

      - name: 🧾 Génération changelog Markdown
        run: |
          jq -r '
            "# Sentinel Evolution Engine\n\n" +
            "Horodatage : " + (.timestamp|tostring) + "\n" +
            "Score moyen réseau : " + (.avg_score|tostring) + "\n" +
            "Upgrade nécessaire : " + (.upgrade_required|tostring) + "\n\n" +
            "## Suggestions\n" +
            (.suggestions|map("- " + .)|join("\n")) + "\n"
          ' public/telemetry/evolution_report.json > public/telemetry/evolution_changelog.md
          echo "✅ Changelog généré" >> logs/evolution.log

      - name: 💾 Commit
        run: |
          git config --global user.name "Sentinel-Evolution"
          git config --global user.email "evolution@sentinel"
          git add public/telemetry/evolution_*
          git commit -m "🔁 Update Evolution Engine report $(date +%T)" || echo "Aucune modification"
          git push || echo "Push non nécessaire"

      - name: 📲 Notification Telegram
        if: always()
        run: |
          if [ -n "${{ secrets.TELEGRAM_WEBHOOK }}" ]; then
            MSG="🔁 [Sentinel Evolution Engine] Rapport mis à jour – upgrade : $(jq -r '.upgrade_required' public/telemetry/evolution_report.json)"
            curl -s -X POST ${{ secrets.TELEGRAM_WEBHOOK }} -d "text=$MSG"
          fi

      - name: 🗂️ Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: sentinel-evolution-engine-logs
          path: logs/
