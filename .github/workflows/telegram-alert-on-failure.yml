name: 🚨 Telegram Alert On Failure

on:
  workflow_run:
    workflows: ["Watchdog AI Sentinel", "Sentinel – Auto Redeploy (every 30 min)"]
    types:
      - completed

jobs:
  alert:
    if: ${{ github.event.workflow_run.conclusion != 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: 🚨 Send failure alert to Telegram
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          if [ -n "$TELEGRAM_BOT_TOKEN" ] && [ -n "$TELEGRAM_CHAT_ID" ]; then
            curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
              -d "chat_id=$TELEGRAM_CHAT_ID" \
              -d "parse_mode=Markdown" \
              -d "text=🚨 *Sentinel Quantum Vanguard AI Pro*\n❌ Build ou déploiement échoué !\nVérifie les logs sur GitHub Actions.\n🕒 $(date -u '+%Y-%m-%dT%H:%M:%SZ')"
          else
            echo "⚠️ Telegram non configuré (tokens manquants)"
          fi

      - name: 🩺 Analyse health.json (si disponible)
        run: |
          curl -s https://sentinelquantumvanguardaipro.pages.dev/health.json -o health.json || true
          STATUS=$(jq -r .status health.json 2>/dev/null || echo "unknown")
          if [ "$STATUS" != "ok" ]; then
            MSG="🚨 *Health Check Failure*\n📊 Status: $STATUS\n⚙️ Build défectueux détecté\n🕒 $(date -u '+%Y-%m-%dT%H:%M:%SZ')"
            curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
              -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}" \
              -d "text=$MSG" \
              -d "parse_mode=Markdown"
          else
            echo "✅ Health.json indique un statut OK."
          fi
