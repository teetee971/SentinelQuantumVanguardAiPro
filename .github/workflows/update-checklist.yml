name: Update Checklist on PR Merge

on:
  pull_request:
    types: [closed]

jobs:
  update-checklist:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Update checklist in README
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = './README.md';
            
            // Read the current README content
            let readmeContent = fs.readFileSync(path, 'utf8');
            
            // Get PR title and description
            const prTitle = context.payload.pull_request.title;
            const prBody = context.payload.pull_request.body || '';
            const prNumber = context.payload.pull_request.number;
            
            console.log(`Processing PR #${prNumber}: "${prTitle}"`);
            
            // Find the checklist section
            const checklistRegex = /## ðŸ“‹ Checklist Copilot â€“ Suivi des tÃ¢ches([\s\S]*?)(?=\n## |\n# |$)/;
            const checklistMatch = readmeContent.match(checklistRegex);
            
            if (!checklistMatch) {
              console.log('Checklist section not found in README.md');
              return;
            }
            
            let checklistSection = checklistMatch[1];
            let hasUpdates = false;
            
            // Create search terms from PR title and body
            const searchTerms = [
              prTitle.toLowerCase(),
              ...prBody.toLowerCase().split(/\s+/).filter(word => word.length > 3)
            ];
            
            console.log('Search terms:', searchTerms);
            
            // Update checklist items that match PR content
            const lines = checklistSection.split('\n');
            const updatedLines = lines.map(line => {
              // Check if line contains an unchecked item
              if (line.match(/^\s*- \[ \]/)) {
                const lineText = line.toLowerCase();
                
                // Check if any search term is found in the line
                const hasMatch = searchTerms.some(term => {
                  if (term.length > 2) {
                    return lineText.includes(term);
                  }
                  return false;
                });
                
                if (hasMatch) {
                  console.log(`Updating line: ${line.trim()}`);
                  hasUpdates = true;
                  return line.replace('- [ ]', '- [x]');
                }
              }
              return line;
            });
            
            if (hasUpdates) {
              // Reconstruct the README with updated checklist
              const updatedChecklistSection = updatedLines.join('\n');
              const updatedReadme = readmeContent.replace(
                checklistRegex,
                `## ðŸ“‹ Checklist Copilot â€“ Suivi des tÃ¢ches${updatedChecklistSection}`
              );
              
              // Write the updated content back to README
              fs.writeFileSync(path, updatedReadme, 'utf8');
              
              // Configure git
              await exec.exec('git', ['config', 'user.name', 'github-actions[bot]']);
              await exec.exec('git', ['config', 'user.email', 'github-actions[bot]@users.noreply.github.com']);
              
              // Add, commit and push changes
              await exec.exec('git', ['add', 'README.md']);
              await exec.exec('git', ['commit', '-m', `âœ… Mise Ã  jour checklist aprÃ¨s merge PR #${prNumber}`]);
              await exec.exec('git', ['push', 'origin', 'main']);
              
              console.log(`Successfully updated checklist for PR #${prNumber}`);
            } else {
              console.log('No matching checklist items found to update');
            }