name: 🚀 Sentinel Quantum Vanguard AI — Auto Deploy & Site Check

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout du dépôt
        uses: actions/checkout@v4

      - name: 📂 Aller dans le dossier du projet
        working-directory: ./SentinelQuantumVanguardAiPro
        run: echo "📁 Dossier courant : $(pwd)"

      - name: 📦 Installer les dépendances
        working-directory: ./SentinelQuantumVanguardAiPro
        run: |
          echo "📦 Installation des dépendances..."
          npm ci || npm install
          npm install @vitejs/plugin-react --save-dev
          npm install tailwindcss postcss autoprefixer --save-dev

      - name: 🧱 Build Vite + Tailwind
        working-directory: ./SentinelQuantumVanguardAiPro
        run: |
          echo "🏗️ Construction du projet avec Vite + Tailwind..."
          npm run build || (echo "❌ Erreur de build : arrêt du workflow" && exit 1)

      - name: ☁️ Purge du cache Cloudflare
        if: success()
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        run: |
          echo "🚀 Purge du cache Cloudflare..."
          curl -X POST "https://api.cloudflare.com/client/v4/zones/$CLOUDFLARE_ZONE_ID/purge_cache" \
            -H "Authorization: Bearer $CF_API_TOKEN" \
            -H "Content-Type: application/json" \
            --data '{"purge_everything":true}' \
            && echo "✅ Purge Cloudflare terminée avec succès."

      - name: 🌐 Vérification accessibilité du site
        id: sitecheck
        run: |
          echo "🔍 Vérification accessibilité du site..."
          STATUS=$(curl -o /dev/null -s -w "%{http_code}" https://sentinelquantumvanguardaipro.pages.dev)
          echo "Code HTTP : $STATUS"
          if [ "$STATUS" -eq 200 ]; then
            echo "✅ Site accessible"
            echo "result=success" >> $GITHUB_OUTPUT
          else
            echo "⚠️ Site inaccessible (code : $STATUS)"
            echo "result=failure" >> $GITHUB_OUTPUT
          fi

      - name: 📢 Notification Telegram (Succès)
        if: steps.sitecheck.outputs.result == 'success'
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          echo "📨 Envoi de la notification Telegram (succès)..."
          curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
            -d "chat_id=${TELEGRAM_CHAT_ID}" \
            -d "text=✅ *Sentinel Quantum Vanguard AI Pro* a été déployé et le site est accessible 🎉%0A🌐 https://sentinelquantumvanguardaipro.pages.dev" \
            -d "parse_mode=Markdown"

      - name: 📢 Notification Telegram (Échec ou Inaccessibilité)
        if: steps.sitecheck.outputs.result == 'failure' || failure()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          echo "📨 Envoi de la notification Telegram (échec)..."
          curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
            -d "chat_id=${TELEGRAM_CHAT_ID}" \
            -d "text=⚠️ *Échec du déploiement ou site inaccessible Sentinel Quantum Vanguard AI Pro.*%0A🔍 Vérifie les logs GitHub Actions ou Cloudflare Pages.%0A🌐 https://sentinelquantumvanguardaipro.pages.dev" \
            -d "parse_mode=Markdown"