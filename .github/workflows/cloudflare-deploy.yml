name: 🌐 Purger le cache Cloudflare + Redéployer Sentinel

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    name: 🚀 Redéploiement Cloudflare Pages
    runs-on: ubuntu-latest
    steps:
      - name: 🧩 Checkout du dépôt
        uses: actions/checkout@v4

      - name: ⚙️ Configuration Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📦 Installation des dépendances
        run: npm ci

      - name: 🧱 Build du projet Vite/Tailwind
        run: npm run build

      - name: 🧹 Purger le cache Cloudflare
        run: |
          echo "🧹 Purge du cache Cloudflare..."
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache" \
          -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
          -H "Content-Type: application/json" \
          --data '{"purge_everything":true}'

      - name: 🌍 Redéployer vers Cloudflare Pages
        run: |
          echo "🌍 Redéploiement Sentinel Quantum Vanguard AI Pro..."
          npx wrangler@4.43.0 pages deploy dist \
            --project-name=sentinel-quantum-vanguard-ai-pro \
            --branch=main
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: 🧠 Vérifier le déploiement
        run: |
          echo "🔎 Vérification du site..."
          curl -I https://sentinelquantumvanguardaipro.pages.dev || true

      - name: 🤖 Notification Telegram (optionnelle)
        if: always()
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.BOT_TOKEN }}/sendMessage" \
          -d "chat_id=${{ secrets.CHAT_ID }}" \
          -d "text=✅ Déploiement Cloudflare Pages terminé pour *Sentinel Quantum Vanguard AI Pro* !" \
          -d "parse_mode=Markdown"