name: 🧾 Sentinel LogSync AI

on:
  schedule:
    - cron: '*/45 * * * *'   # toutes les 45 minutes
  workflow_dispatch:

jobs:
  logsync:
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout repository
        uses: actions/checkout@v4

      - name: 🧠 Collecte des journaux GitHub Actions
        uses: actions/github-script@v7
        id: collect
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const { data: runs } = await github.rest.actions.listWorkflowRunsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 10
            });
            const out = runs.workflow_runs.map(r => ({
              id: r.id,
              name: r.name,
              status: r.conclusion || 'in_progress',
              started: r.run_started_at,
              updated: r.updated_at
            }));
            fs.mkdirSync('logs', { recursive: true });
            fs.writeFileSync('logs/github-runs.json', JSON.stringify(out, null, 2));
            core.notice('✅ Logs GitHub Actions collectés.');

      - name: 🌐 Statut Cloudflare Pages
        run: |
          mkdir -p logs
          echo "{ \"timestamp\":\"$(date)\"," > logs/cloudflare.json
          echo "\"http_code\":\"$(curl -o /dev/null -s -w '%{http_code}' https://sentinelquantumvanguardaipro.pages.dev)\"," >> logs/cloudflare.json
          echo "\"cdn_latency\":\"$(ping -c 1 pages.dev | grep time= | cut -d' ' -f8- | head -1)\" }" >> logs/cloudflare.json
          echo "✅ Statut Cloudflare enregistré."

      - name: 🧩 Génération du rapport HTML
        run: |
          mkdir -p public/logs
          echo "<html><head><title>Sentinel LogSync AI</title><meta http-equiv='refresh' content='900'></head><body style='background:#0d1117;color:#e6